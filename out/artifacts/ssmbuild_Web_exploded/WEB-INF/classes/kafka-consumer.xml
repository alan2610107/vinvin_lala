<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">


    <!-- 定义consumer的参数 -->
    <bean id="consumerPropertiesVinItem" class="java.util.HashMap">
        <constructor-arg>
            <map>
<!--                new-->
                <entry key="auto.offset.reset" value="earliest"/>
                <entry key="max.poll.records" value="200"/>
                <entry key="max.poll.interval.ms" value="15000"/>

<!--                new-->
                <entry key="bootstrap.servers" value="localhost:9092" />
                <entry key="group.id" value="0" />
                <entry key="enable.auto.commit" value="false" /><!--new-->
                <entry key="auto.commit.interval.ms" value="1000" />
                <entry key="session.timeout.ms" value="15000" />
                <entry key="key.deserializer"
                       value="org.apache.kafka.common.serialization.StringDeserializer" />
                <entry key="value.deserializer"
                       value="com.kuang.serializer.VinItemDeserializer" />

            </map>
        </constructor-arg>
    </bean>

    <!-- 创建consumerFactory bean -->
    <bean id="consumerFactoryVinItem" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg>
            <ref bean="consumerPropertiesVinItem" />
        </constructor-arg>
    </bean>

<!--    <bean id="ackContainerFactory" class="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory">-->
<!--        <property name="consumerFactory" ref="consumerFactoryVinItem"/>-->

<!--    </bean>-->


<!--    &lt;!&ndash; 实际执行消息消费的类 &ndash;&gt;-->
<!--    <bean id="messageListernerConsumerService" class="com.kuang.controller.KafKaConsumer" />-->

<!--    &lt;!&ndash; 消费者容器配置信息 &ndash;&gt;-->
<!--    <bean id="containerProperties"-->
<!--          class="org.springframework.kafka.listener.ContainerProperties">-->
<!--        &lt;!&ndash;選擇topic&ndash;&gt;-->
<!--        <constructor-arg value="test" />-->
<!--        <property name="messageListener" ref="messageListernerConsumerService" />-->
<!--    </bean>-->

<!--    &lt;!&ndash; 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 &ndash;&gt;-->
<!--    <bean id="messageListenerContainer"-->
<!--          class="org.springframework.kafka.listener.KafkaMessageListenerContainer"-->
<!--          init-method="doStart">-->
<!--        <constructor-arg ref="consumerFactory" />-->
<!--        <constructor-arg ref="containerProperties" />-->
<!--    </bean>-->

</beans>


